{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-05-19T03:07:13.573415Z", "invocation_id": "7207dc58-950c-4efc-99f4-c214715118c8", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.794110Z", "completed_at": "2025-05-19T03:07:12.805291Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.805809Z", "completed_at": "2025-05-19T03:07:12.805822Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01390385627746582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_beverage_consumption", "compiled": true, "compiled_code": "SELECT id_drink, str_drink, str_category, str_alcoholic, str_glass, str_instructions, \nstr_drink_thumb, (date_modified AT TIME ZONE 'Australia/Melbourne')::date AS date_melbourne,\nstr_ingredient1, str_ingredient2, \nstr_ingredient3, str_ingredient4, str_ingredient5, str_ingredient6, \nstr_ingredient7, str_ingredient8\n\t-- FROM cocktail_data.consumption\n    from \"camondagster\".\"beverage_data\".\"consumption\"", "relation_name": "\"camondagster\".\"public_base\".\"base_beverage_consumption\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.799310Z", "completed_at": "2025-05-19T03:07:12.808295Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.812768Z", "completed_at": "2025-05-19T03:07:12.812777Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020303964614868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_beverage_ingredients_lookup", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Base_beverage_ingredients_lookup\n-- Description: Base Table for Beverage Ingredients\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-12 | Cam      | Initial creation\n-- 2025-05-12 | Cam      | Added logic to filter out null beverage IDs\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\nSelect it.source_ingredient as Ingredient,\nit.id_drink as beverage_id,\nit.str_drink as Beverage_Name\nfrom \"camondagster\".\"beverage_data\".\"ingredients_table\"  as it\nwhere it.id_drink is not null", "relation_name": "\"camondagster\".\"public_base\".\"base_beverage_ingredients_lookup\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.808772Z", "completed_at": "2025-05-19T03:07:12.814291Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.815452Z", "completed_at": "2025-05-19T03:07:12.815459Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008403778076171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_beverages", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Base_Beverages\n-- Description: Base Table for multiple Dims - Bev Type, Alcoholic Type and Beverage Name\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-12 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\nselect bt.str_drink as beverage_name, \n    bt.id_drink as beverage_id, \n\tbt.source_beverage_type as beverage_type,\n\tmd5(cast(coalesce(cast(source_beverage_type as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(source_alcohol_type as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as beverage_category_sk,\n\tact.source_alcohol_type as alcoholic_type\n\tfrom \"camondagster\".\"beverage_data\".\"beverages_table\" as bt\n    left join \"camondagster\".\"beverage_data\".\"alcoholic_table\" as act \n\ton bt.id_drink = act.id_drink", "relation_name": "\"camondagster\".\"public_base\".\"base_beverages\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.817156Z", "completed_at": "2025-05-19T03:07:12.825459Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.825994Z", "completed_at": "2025-05-19T03:07:12.826002Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011313676834106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_geo", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Base_Geo\n-- Description: Base Table for multiple Dims - City, Country, Region and Continent\n-- Plan to add in more countries in the future\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-15 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\nSELECT city_id, city, latitude, longitude, country_code, country, region, continent\nFrom \"camondagster\".\"geo_data\".\"geo_cities\" \nwhere country in ('New Zealand', 'United Kingdom', 'Australia', 'Canada')", "relation_name": "\"camondagster\".\"public_base\".\"base_geo\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.821244Z", "completed_at": "2025-05-19T03:07:12.827245Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.828437Z", "completed_at": "2025-05-19T03:07:12.828443Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00837087631225586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_gsheets_finance", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Base Gsheets Finance\n-- Description: Base Table for Gsheets Finance\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-14 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\nSELECT \n    Id, \n    stock, \n    CAST(price AS DECIMAL) AS price,\n    date_time AT TIME ZONE 'UTC' AT TIME ZONE 'Australia/Melbourne' AS date_time,\n    ROUND((MAX(price) OVER(PARTITION BY stock) - MIN(price) OVER(PARTITION BY stock)), 2) AS price_spread,\n    ROUND((LAST(price) OVER(PARTITION BY stock ORDER BY date_time) - FIRST(price) OVER(PARTITION BY stock)), 2) AS relative_price_movement,\n    ROUND((LAST(price) OVER(PARTITION BY stock) - FIRST(price) OVER(PARTITION BY stock)), 2) AS abs_price_movement,\n    COUNT(id) OVER(PARTITION BY stock) AS Num_Stock_Entries\nFROM \"camondagster\".\"google_sheets_data\".\"gsheets_finance\"", "relation_name": "\"camondagster\".\"public_base\".\"base_gsheets_finance\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.830138Z", "completed_at": "2025-05-19T03:07:12.835380Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.838693Z", "completed_at": "2025-05-19T03:07:12.838700Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011015653610229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_meal_category_country", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: base_meal_category_country\n-- Description: Base Table for multiple Dims - meal category, meal country\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-12 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\n\nSELECT ct.str_meal as meal_name, ct.id_meal as meal_id, \n\tct.source_country as country_name,\n\tmd5(cast(coalesce(cast(source_country as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(source_category as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as meal_country_category_sk,\n\tcat.source_category as category_name\nFROM \"camondagster\".\"meals_data\".\"country_table\" as ct\n\tleft join \"camondagster\".\"meals_data\".\"category_table\" as cat \n\ton ct.id_meal = cat.id_meal", "relation_name": "\"camondagster\".\"public_base\".\"base_meal_category_country\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.835843Z", "completed_at": "2025-05-19T03:07:12.841466Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.844724Z", "completed_at": "2025-05-19T03:07:12.844733Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010668039321899414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_meal_consumption", "compiled": true, "compiled_code": "select id_meal as meal_id, str_meal as meal_name, str_category as category_name, str_area as country_name, \nstr_instructions as instructions, str_meal_thumb as meal_image_url, str_youtube as meal_youtube_url, \nNULLIF(str_ingredient1, '') as str_ingredient1, \nNULLIF(str_ingredient2, '') as str_ingredient2,\nNULLIF(str_ingredient3, '') as str_ingredient3,\nNULLIF(str_ingredient4, '') as str_ingredient4,\nNULLIF(str_ingredient5, '') as str_ingredient5,\nNULLIF(str_ingredient6, '') as str_ingredient6,\nNULLIF(str_ingredient7, '') as str_ingredient7, \nNULLIF(str_ingredient8, '') as str_ingredient8,\nNULLIF(str_ingredient9, '') as str_ingredient9,\nNULLIF(str_ingredient10, '') as str_ingredient10,\nNULLIF(str_ingredient11, '') as str_ingredient11,\nNULLIF(str_ingredient12, '') as str_ingredient12,\nNULLIF(str_ingredient13, '') as str_ingredient13,\nNULLIF(str_ingredient14, '') as str_ingredient14,\nNULLIF(str_ingredient15, '') as str_ingredient15,\nNULLIF(str_ingredient16, '') as str_ingredient16,\nNULLIF(str_ingredient17, '') as str_ingredient17,\nNULLIF(str_ingredient18, '') as str_ingredient18,\nNULLIF(str_ingredient19, '') as str_ingredient19,\nNULLIF(str_ingredient20, '') as str_ingredient20,\nstr_source as meal_url\n    from \"camondagster\".\"meals_data\".\"consumption\"", "relation_name": "\"camondagster\".\"public_base\".\"base_meal_consumption\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.841952Z", "completed_at": "2025-05-19T03:07:12.847479Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.850721Z", "completed_at": "2025-05-19T03:07:12.850729Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010537147521972656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_meal_ingredient_table", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Base_meal_ingredient_table\n-- Description: Base Table for list of meals for each ingredient\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-12 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\nSELECT str_meal as meal_name, id_meal as meal_id, \nsource_ingredient as ingredient_name\nFROM \"camondagster\".\"meals_data\".\"ingredient_table\"", "relation_name": "\"camondagster\".\"public_base\".\"base_meal_ingredient_table\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.847949Z", "completed_at": "2025-05-19T03:07:12.852953Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.853957Z", "completed_at": "2025-05-19T03:07:12.853962Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007639169692993164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_meal_ingredients", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Base_meal_ingredients\n-- Description: Base Table for meal ingredients - Only Needed for Ingredient ID (Int)\n-- Fast Comparison\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-12 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\nSELECT id_ingredient::INTEGER as ingredient_id, str_ingredient as ingredient_name\nFROM \"camondagster\".\"meals_data\".\"ingredients\"", "relation_name": "\"camondagster\".\"public_base\".\"base_meal_ingredients\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.860693Z", "completed_at": "2025-05-19T03:07:12.863630Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.864643Z", "completed_at": "2025-05-19T03:07:12.864649Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00523686408996582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_rm_character_episode", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Base_rm_character_episode\n-- Description: Base join table\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-16 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\n\nSELECT\n  _dlt_root_id AS character_dlt_id,\n  CAST(regexp_replace(value, '.*/(\\d+)$', '\\1') AS INTEGER) AS episode_id\nFROM \"camondagster\".\"rick_and_morty_data\".\"character__episode\"", "relation_name": "\"camondagster\".\"public_base\".\"base_rm_character_episode\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.854673Z", "completed_at": "2025-05-19T03:07:12.864078Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.865382Z", "completed_at": "2025-05-19T03:07:12.865388Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013017892837524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_openlibrary", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Base_Beverage_openlibrary\n-- Description: Unioning Tables with Books seperated by Search and Filter term\n-- from the OpenLibrary API, the point of this is to test using both DLT State\n-- & DuckDb connection to check for New API data (via DLT State) and deleted or\n-- truncation data loss with DuckDB sql comparison with DLT State.\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-15 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\n\nSELECT search_term, topic_filter, title, author_name, \npublish_year, edition_count, key, subject_str\nFROM \"camondagster\".\"openlibrary_data\".\"sql_books\" \nunion all\nSELECT search_term, topic_filter, title, author_name, \npublish_year, edition_count, key, subject_str\nFROM \"camondagster\".\"openlibrary_data\".\"python_books\" \nunion all\nSELECT search_term, topic_filter, title, author_name, \npublish_year, edition_count, key, subject_str\nFROM \"camondagster\".\"openlibrary_data\".\"data_warehousing_books\" \nunion all\nSELECT search_term, topic_filter, title, author_name, \npublish_year, edition_count, key, subject_str\nFROM \"camondagster\".\"openlibrary_data\".\"data_engineering_books\" \nunion all\nSELECT search_term, topic_filter, title, author_name, \npublish_year, edition_count, key, subject_str\nFROM \"camondagster\".\"openlibrary_data\".\"apache_airflow_books\"", "relation_name": "\"camondagster\".\"public_base\".\"base_openlibrary\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.869306Z", "completed_at": "2025-05-19T03:07:12.876863Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.877540Z", "completed_at": "2025-05-19T03:07:12.877546Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010363101959228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_rm_characters", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Base_rm_characters\n-- Description: Base Table for ricky and morty characters from API\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-16 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\nSELECT id as character_id, name as character_name, status as character_status, \nspecies as character_species, gender as character_gender, \norigin__name as character_origin, \nlocation__name as character_first_location, location__url as character_first_location_url, \nimage as character_image, url as character_url, \ncreated AT TIME ZONE 'UTC' AT TIME ZONE 'Australia/Melbourne' AS character_created\n, \"_dlt_id\" as character_dlt_id\nFROM \"camondagster\".\"rick_and_morty_data\".\"character\"", "relation_name": "\"camondagster\".\"public_base\".\"base_rm_characters\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.872174Z", "completed_at": "2025-05-19T03:07:12.879400Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.880555Z", "completed_at": "2025-05-19T03:07:12.880561Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012785196304321289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_rm_episode_character", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Base_rm_episode_character\n-- Description: Base join table\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-16 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\nSELECT\n  _dlt_root_id AS episode_dlt_id,\n  CAST(regexp_replace(value, '.*/(\\d+)$', '\\1') AS INTEGER) AS character_id\nFROM \"camondagster\".\"rick_and_morty_data\".\"episode__characters\"", "relation_name": "\"camondagster\".\"public_base\".\"base_rm_episode_character\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.881285Z", "completed_at": "2025-05-19T03:07:12.888516Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.889071Z", "completed_at": "2025-05-19T03:07:12.889077Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010353326797485352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_rm_episodes", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: base_rm_episode\n-- Description: Base Table for ricky and morty episodes from API\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-16 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\nSELECT id as episode_id, name as episode_name\n,STRPTIME(air_date, '%B %d, %Y') AS episode_air_date\n, episode, url as episode_url\n,created AT TIME ZONE 'UTC' AT TIME ZONE 'Australia/Melbourne' AS episode_created \n,\"_dlt_id\" as episode_dlt_id\nFROM \"camondagster\".\"rick_and_morty_data\".\"episode\"", "relation_name": "\"camondagster\".\"public_base\".\"base_rm_episodes\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.885704Z", "completed_at": "2025-05-19T03:07:12.890359Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.891473Z", "completed_at": "2025-05-19T03:07:12.891478Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.006818294525146484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_rm_location_residents", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: base_rm_location_residents\n-- Description: Base Table for ricky and morty residents within a location from API\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-16 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\n\nSELECT\n  _dlt_root_id AS location_dlt_id,\n  CAST(regexp_replace(value, '.*/(\\d+)$', '\\1') AS INTEGER) AS character_id\nFROM \"camondagster\".\"rick_and_morty_data\".\"location__residents\"", "relation_name": "\"camondagster\".\"public_base\".\"base_rm_location_residents\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.893287Z", "completed_at": "2025-05-19T03:07:12.900162Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.901073Z", "completed_at": "2025-05-19T03:07:12.901079Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010378360748291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_rm_locations", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: base_rm_locations\n-- Description: Base Table for ricky and morty locations from API\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-16 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\nSELECT id as location_id, name as location_name, type as location_type, \ndimension as location_dimension, url as location_url\n,created AT TIME ZONE 'UTC' AT TIME ZONE 'Australia/Melbourne' AS location_created\n,\"_dlt_id\" as location_dlt_id\nFROM \"camondagster\".\"rick_and_morty_data\".\"location\"", "relation_name": "\"camondagster\".\"public_base\".\"base_rm_locations\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.897304Z", "completed_at": "2025-05-19T03:07:12.900612Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.901806Z", "completed_at": "2025-05-19T03:07:12.901811Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00584721565246582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.base_weather", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: base_weather\n-- Description: Base Table for weather data from API\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-18 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\n\nSELECT (date)::date as weather_date, city, temperature_max, temperature_min, temperature_mean, precipitation_sum, \nwindspeed_max, windgusts_max, sunshine_duration, location__lat as latitude, location__lng as longitude\nFROM \"camondagster\".\"weather_data\".\"daily_weather\"", "relation_name": "\"camondagster\".\"public_base\".\"base_weather\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.908502Z", "completed_at": "2025-05-19T03:07:12.910714Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.911217Z", "completed_at": "2025-05-19T03:07:12.911222Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0070002079010009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.dim_date", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Dim Date\n-- Description: Dimension Table, date information\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-17 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\nWITH RECURSIVE date_series AS (\n    SELECT DATE '2000-01-01' AS date\n    UNION ALL\n    SELECT date + INTERVAL '1 day'\n    FROM date_series\n    WHERE date + INTERVAL '1 day' < DATE '2030-01-01'\n)\nSELECT\n    date AS date_col,\n    EXTRACT(YEAR FROM date) AS year,\n    EXTRACT(MONTH FROM date) AS month,\n    EXTRACT(DAY FROM date) AS day,\n    strftime('%B', date) AS month_name,  -- Replacing TO_CHAR with strftime\n    strftime('%A', date) AS weekday_name,  -- Replacing TO_CHAR with strftime\n    EXTRACT(DOW FROM date) AS day_of_week,\n    CASE WHEN EXTRACT(DOW FROM date) IN (0, 6) THEN TRUE ELSE FALSE END AS is_weekend,\n    EXTRACT(DOY FROM date) AS day_of_year,\n    EXTRACT(WEEK FROM date) AS week_of_year,\n    EXTRACT(QUARTER FROM date) AS quarter\nFROM date_series", "relation_name": "\"camondagster\".\"public_common\".\"dim_date\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.905726Z", "completed_at": "2025-05-19T03:07:12.911876Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.912948Z", "completed_at": "2025-05-19T03:07:12.912953Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00925588607788086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.dim_beverage_ingredient_jointable", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Dim_beverage_ingredient_jointable\n-- Description: Join table for beverage ingredients\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-17 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\nSELECT distinct id_drink as Beverage_ID\n    from \"camondagster\".\"beverage_data\".\"ingredients_table\" as it\n    where id_drink is not null", "relation_name": "\"camondagster\".\"public_common\".\"dim_beverage_ingredient_jointable\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.915795Z", "completed_at": "2025-05-19T03:07:12.920571Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.921627Z", "completed_at": "2025-05-19T03:07:12.921633Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007966756820678711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "snapshot.camondagster.glass_type_snapshot", "compiled": true, "compiled_code": "\n\n\n\nSELECT \n    id_drink as beverage_id, source_glass as glass_type\n    ,md5(cast(coalesce(cast(glass_type as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as Glass_Type_SK\nfrom \"camondagster\".\"beverage_data\".\"glass_table\"\n", "relation_name": "\"camondagster\".\"public_snapshots\".\"glass_type_snapshot\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.922423Z", "completed_at": "2025-05-19T03:07:12.936620Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.937113Z", "completed_at": "2025-05-19T03:07:12.937119Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021920442581176758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.source_not_null_gsheets_gsheets_finance_id.3104f01e33", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"camondagster\".\"google_sheets_data\".\"gsheets_finance\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.932748Z", "completed_at": "2025-05-19T03:07:12.938979Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.939981Z", "completed_at": "2025-05-19T03:07:12.939986Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00835728645324707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.source_not_null_openlibrary_apache_airflow_books_key.013e7c07bb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect key\nfrom \"camondagster\".\"openlibrary_data\".\"apache_airflow_books\"\nwhere key is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.940700Z", "completed_at": "2025-05-19T03:07:12.950161Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.950755Z", "completed_at": "2025-05-19T03:07:12.950761Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012381315231323242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.source_not_null_openlibrary_data_engineering_books_key.066b4bba14", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect key\nfrom \"camondagster\".\"openlibrary_data\".\"data_engineering_books\"\nwhere key is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.946211Z", "completed_at": "2025-05-19T03:07:12.953327Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.957525Z", "completed_at": "2025-05-19T03:07:12.957531Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012367725372314453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.source_not_null_openlibrary_data_warehousing_books_key.8ca1507d40", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect key\nfrom \"camondagster\".\"openlibrary_data\".\"data_warehousing_books\"\nwhere key is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.953809Z", "completed_at": "2025-05-19T03:07:12.959572Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.960601Z", "completed_at": "2025-05-19T03:07:12.960607Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008312463760375977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.source_not_null_openlibrary_python_books_key.2e25c37883", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect key\nfrom \"camondagster\".\"openlibrary_data\".\"python_books\"\nwhere key is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.961331Z", "completed_at": "2025-05-19T03:07:12.966454Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.967403Z", "completed_at": "2025-05-19T03:07:12.967408Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008432149887084961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.source_not_null_openlibrary_sql_books_key.7dea3fa6c0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect key\nfrom \"camondagster\".\"openlibrary_data\".\"sql_books\"\nwhere key is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.968108Z", "completed_at": "2025-05-19T03:07:12.980807Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.981451Z", "completed_at": "2025-05-19T03:07:12.981456Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015601396560668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.source_unique_gsheets_gsheets_finance_id.edff15d707", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"google_sheets_data\".\"gsheets_finance\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.977302Z", "completed_at": "2025-05-19T03:07:12.982713Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.983740Z", "completed_at": "2025-05-19T03:07:12.983745Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0074977874755859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.source_unique_openlibrary_apache_airflow_books_key.e5a73d623a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    key as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"openlibrary_data\".\"apache_airflow_books\"\nwhere key is not null\ngroup by key\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.990389Z", "completed_at": "2025-05-19T03:07:12.994180Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.994655Z", "completed_at": "2025-05-19T03:07:12.994659Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0054187774658203125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.source_unique_openlibrary_data_warehousing_books_key.3496bcbb08", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    key as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"openlibrary_data\".\"data_warehousing_books\"\nwhere key is not null\ngroup by key\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.985526Z", "completed_at": "2025-05-19T03:07:12.995367Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:12.996428Z", "completed_at": "2025-05-19T03:07:12.996434Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013332128524780273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.source_unique_openlibrary_data_engineering_books_key.a0d050f7e4", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    key as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"openlibrary_data\".\"data_engineering_books\"\nwhere key is not null\ngroup by key\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.003596Z", "completed_at": "2025-05-19T03:07:13.007368Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.008359Z", "completed_at": "2025-05-19T03:07:13.008365Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00973200798034668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.source_unique_openlibrary_sql_books_key.780888e7a3", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    key as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"openlibrary_data\".\"sql_books\"\nwhere key is not null\ngroup by key\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:12.999242Z", "completed_at": "2025-05-19T03:07:13.007802Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.009063Z", "completed_at": "2025-05-19T03:07:13.009068Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011986732482910156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.source_unique_openlibrary_python_books_key.00e67edb2f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    key as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"openlibrary_data\".\"python_books\"\nwhere key is not null\ngroup by key\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.016647Z", "completed_at": "2025-05-19T03:07:13.021255Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.021766Z", "completed_at": "2025-05-19T03:07:13.021771Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010406494140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.dim_beverage_ingredient_hierarchy", "compiled": true, "compiled_code": "SELECT bil.ingredient, bil.beverage_id, bil.beverage_name\n\t,bil2.ingredient as ingredient2\n\t,bil3.ingredient as ingredient3\n\t,bil4.ingredient as ingredient4\n\t,bil5.ingredient as ingredient5\n\t,bil6.ingredient as ingredient6\n\t,bil7.ingredient as ingredient7\n\t-- FROM public_base.base_beverage_ingredients_lookup as bil\n    from \"camondagster\".\"public_base\".\"base_beverage_ingredients_lookup\" as bil\n\t-- Second\n\t-- left join public_base.base_beverage_ingredients_lookup as bil2 \n    left join \"camondagster\".\"public_base\".\"base_beverage_ingredients_lookup\" as bil2\n\ton bil.beverage_id = bil2.beverage_id and bil.ingredient != bil2.ingredient\n\t-- Third\n\t-- left join public_base.base_beverage_ingredients_lookup as bil3\n    left join \"camondagster\".\"public_base\".\"base_beverage_ingredients_lookup\" as bil3\n\ton bil.beverage_id = bil3.beverage_id and bil3.ingredient not in (bil2.ingredient, bil.ingredient)\n\t-- Fourth\n\t-- left join public_base.base_beverage_ingredients_lookup as bil4\n    left join \"camondagster\".\"public_base\".\"base_beverage_ingredients_lookup\" as bil4\n\ton bil.beverage_id = bil4.beverage_id and bil4.ingredient not in (bil3.ingredient, bil2.ingredient, bil.ingredient)\n\t-- Fifth\n\t-- left join public_base.base_beverage_ingredients_lookup as bil5\n    left join \"camondagster\".\"public_base\".\"base_beverage_ingredients_lookup\" as bil5\n\ton bil.beverage_id = bil5.beverage_id and bil5.ingredient not in (bil4.ingredient ,bil3.ingredient, bil2.ingredient, bil.ingredient)\n\t-- sixth\n\t-- left join public_base.base_beverage_ingredients_lookup as bil6\n    left join \"camondagster\".\"public_base\".\"base_beverage_ingredients_lookup\" as bil6\n\ton bil.beverage_id = bil6.beverage_id and bil6.ingredient not in (bil5.ingredient, bil4.ingredient ,bil3.ingredient, bil2.ingredient, bil.ingredient)\n\t-- seventh\n\t-- left join public_base.base_beverage_ingredients_lookup as bil7\n    left join \"camondagster\".\"public_base\".\"base_beverage_ingredients_lookup\" as bil7\n\ton bil.beverage_id = bil7.beverage_id and bil7.ingredient not in (bil6.ingredient, bil5.ingredient, bil4.ingredient ,bil3.ingredient, bil2.ingredient, bil.ingredient)\n-- \twhere bil.beverage_id = '17836'\n\torder by ingredient desc, beverage_name desc, ingredient2 desc", "relation_name": "\"camondagster\".\"public_common\".\"dim_beverage_ingredient_hierarchy\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.012937Z", "completed_at": "2025-05-19T03:07:13.023076Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.024168Z", "completed_at": "2025-05-19T03:07:13.024174Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013349056243896484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_base_beverage_consumption_id_drink.561caf7667", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id_drink\nfrom \"camondagster\".\"public_base\".\"base_beverage_consumption\"\nwhere id_drink is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.100627Z", "completed_at": "2025-05-19T03:07:13.105541Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.106052Z", "completed_at": "2025-05-19T03:07:13.106059Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0067424774169921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.staging_beverage_lookup", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Staging_Beverage_Lookup\n-- Description: Staging model for beverage lookup data\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-12 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\n\nselect beverage_name, \n\t-- used in dim_beverage to connect to consumption\n    beverage_id, \n\tbeverage_type,\n\t-- used in dim_beverage and dim_beverage_type as the connection\n\tmd5(cast(coalesce(cast(beverage_type as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as beverage_type_sk,\n\t-- used in dim_alcoholic_type and dim_beverage_type as connection\n\tmd5(cast(coalesce(cast(beverage_type as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(alcoholic_type as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as beverage_category_sk,\n\talcoholic_type,\n\t-- in dim_alcoholic_type encase any future fact tables need to connect directly \n\tmd5(cast(coalesce(cast(alcoholic_type as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as alcoholic_type_sk\n    from \"camondagster\".\"public_base\".\"base_beverages\"", "relation_name": "\"camondagster\".\"public_staging\".\"staging_beverage_lookup\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.025945Z", "completed_at": "2025-05-19T03:07:13.108623Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.113328Z", "completed_at": "2025-05-19T03:07:13.113335Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.08985614776611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.dbt_utils_unique_combination_of_columns_base_beverage_ingredients_lookup_ingredient__beverage_id.b326d9a641", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        ingredient, beverage_id\n    from \"camondagster\".\"public_base\".\"base_beverage_ingredients_lookup\"\n    group by ingredient, beverage_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.115890Z", "completed_at": "2025-05-19T03:07:13.119727Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.120686Z", "completed_at": "2025-05-19T03:07:13.120692Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00593876838684082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_base_beverages_beverage_id.b8f3d5637e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect beverage_id\nfrom \"camondagster\".\"public_base\".\"base_beverages\"\nwhere beverage_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.109122Z", "completed_at": "2025-05-19T03:07:13.120192Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.121423Z", "completed_at": "2025-05-19T03:07:13.121428Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014117956161499023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.accepted_values_base_beverages_alcoholic_type__True__Non_alcoholic__Optional_alcohol__Alcoholic.34c9662782", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        alcoholic_type as value_field,\n        count(*) as n_records\n\n    from \"camondagster\".\"public_base\".\"base_beverages\"\n    group by alcoholic_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Non alcoholic','Optional alcohol','Alcoholic'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.125312Z", "completed_at": "2025-05-19T03:07:13.133817Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.134821Z", "completed_at": "2025-05-19T03:07:13.134828Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011602640151977539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_base_beverages_beverage_name.4ae5d66d1b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect beverage_name\nfrom \"camondagster\".\"public_base\".\"base_beverages\"\nwhere beverage_name is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.128847Z", "completed_at": "2025-05-19T03:07:13.134329Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.135632Z", "completed_at": "2025-05-19T03:07:13.135637Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01190948486328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.relationships_base_beverage_consumption_id_drink__beverage_id__ref_base_beverages_.e5e651a6ba", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select id_drink as from_field\n    from \"camondagster\".\"public_base\".\"base_beverage_consumption\"\n    where id_drink is not null\n),\n\nparent as (\n    select beverage_id as to_field\n    from \"camondagster\".\"public_base\".\"base_beverages\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.143213Z", "completed_at": "2025-05-19T03:07:13.148739Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.149728Z", "completed_at": "2025-05-19T03:07:13.149734Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011788368225097656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_base_beverages_beverage_name.a2d4fd1356", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    beverage_name as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_base\".\"base_beverages\"\nwhere beverage_name is not null\ngroup by beverage_name\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.139491Z", "completed_at": "2025-05-19T03:07:13.149221Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.150488Z", "completed_at": "2025-05-19T03:07:13.150494Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013044357299804688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_base_beverages_beverage_id.fca0ee3980", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    beverage_id as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_base\".\"base_beverages\"\nwhere beverage_id is not null\ngroup by beverage_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.154286Z", "completed_at": "2025-05-19T03:07:13.162489Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.162995Z", "completed_at": "2025-05-19T03:07:13.163000Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010751008987426758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.staging_geo", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Staging_geo\n-- Description: Staging model for geographic data\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-19 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\nselect city_id, city, latitude, longitude, country_code, country, region, \nmd5(cast(coalesce(cast(city as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(country as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as City_SK,\nmd5(cast(coalesce(cast(country as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as Country_SK\nfrom \"camondagster\".\"public_base\".\"base_geo\"", "relation_name": "\"camondagster\".\"public_staging\".\"staging_geo\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.158427Z", "completed_at": "2025-05-19T03:07:13.169737Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.170381Z", "completed_at": "2025-05-19T03:07:13.170388Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01763749122619629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.accepted_values_base_geo_country_code__True__AU__NZ__CA__GB.a3d3afa24f", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        country_code as value_field,\n        count(*) as n_records\n\n    from \"camondagster\".\"public_base\".\"base_geo\"\n    group by country_code\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'AU','NZ','CA','GB'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.165504Z", "completed_at": "2025-05-19T03:07:13.172243Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.173468Z", "completed_at": "2025-05-19T03:07:13.173474Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009272575378417969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.dbt_expectations_expect_column_values_to_be_between_base_geo_latitude__90___90__False.c3084ce8f0", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and latitude >= -90 and latitude <= 90\n)\n as expression\n\n\n    from \"camondagster\".\"public_base\".\"base_geo\"\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.174244Z", "completed_at": "2025-05-19T03:07:13.180234Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.184813Z", "completed_at": "2025-05-19T03:07:13.184821Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013336658477783203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.dbt_expectations_expect_column_values_to_be_between_base_geo_longitude__180___180__False.5d5a8f0a6a", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and longitude >= -180 and longitude <= 180\n)\n as expression\n\n\n    from \"camondagster\".\"public_base\".\"base_geo\"\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.180737Z", "completed_at": "2025-05-19T03:07:13.191177Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.191723Z", "completed_at": "2025-05-19T03:07:13.191728Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012642621994018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_base_geo_city_id.94562eb347", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect city_id\nfrom \"camondagster\".\"public_base\".\"base_geo\"\nwhere city_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.187496Z", "completed_at": "2025-05-19T03:07:13.192500Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.193534Z", "completed_at": "2025-05-19T03:07:13.193540Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007377147674560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_base_geo_city_id.a4c893fe58", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    city_id as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_base\".\"base_geo\"\nwhere city_id is not null\ngroup by city_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.196455Z", "completed_at": "2025-05-19T03:07:13.206395Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.207076Z", "completed_at": "2025-05-19T03:07:13.207082Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012836217880249023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_base_gsheets_finance_id.0d75c08608", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect id\nfrom \"camondagster\".\"public_base\".\"base_gsheets_finance\"\nwhere id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.202690Z", "completed_at": "2025-05-19T03:07:13.207902Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.208959Z", "completed_at": "2025-05-19T03:07:13.208964Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01311492919921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_base_gsheets_finance_id.81717edef5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_base\".\"base_gsheets_finance\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.211778Z", "completed_at": "2025-05-19T03:07:13.219585Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.220121Z", "completed_at": "2025-05-19T03:07:13.220126Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010540246963500977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.staging_meal_category_lookup", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: staging_meal_category_lookup\n-- Description: Staging Table, lookup for category and country per meal, used for Dim\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-12 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\n\nSELECT \n\tmeal_name, \n\tmeal_id, category_name,  \n\t-- Used in Dim_Meal_Category and Dim_Meal_Country\n\tmeal_country_category_sk,\n\tcountry_name,\n\t-- In Dim_Meal_Country encase any future fact tables need to connect directly \n\tmd5(cast(coalesce(cast(country_name as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as meal_country_sk\n    From \"camondagster\".\"public_base\".\"base_meal_category_country\"", "relation_name": "\"camondagster\".\"public_staging\".\"staging_meal_category_lookup\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.215809Z", "completed_at": "2025-05-19T03:07:13.220837Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.222011Z", "completed_at": "2025-05-19T03:07:13.222017Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010828256607055664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_base_meal_category_country_meal_id.f1fc6a2e02", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect meal_id\nfrom \"camondagster\".\"public_base\".\"base_meal_category_country\"\nwhere meal_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.224916Z", "completed_at": "2025-05-19T03:07:13.229401Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.233785Z", "completed_at": "2025-05-19T03:07:13.233791Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011089086532592773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_base_meal_category_country_meal_id.96de22ba03", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    meal_id as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_base\".\"base_meal_category_country\"\nwhere meal_id is not null\ngroup by meal_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.229885Z", "completed_at": "2025-05-19T03:07:13.240941Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.242074Z", "completed_at": "2025-05-19T03:07:13.242080Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017801523208618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_base_meal_consumption_meal_id.5801469d88", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect meal_id\nfrom \"camondagster\".\"public_base\".\"base_meal_consumption\"\nwhere meal_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.236240Z", "completed_at": "2025-05-19T03:07:13.241585Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.242820Z", "completed_at": "2025-05-19T03:07:13.242825Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007656097412109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.relationships_base_meal_consumption_meal_id__meal_id__ref_base_meal_category_country_.ebae62c8a2", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select meal_id as from_field\n    from \"camondagster\".\"public_base\".\"base_meal_consumption\"\n    where meal_id is not null\n),\n\nparent as (\n    select meal_id as to_field\n    from \"camondagster\".\"public_base\".\"base_meal_category_country\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.252554Z", "completed_at": "2025-05-19T03:07:13.256054Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.256567Z", "completed_at": "2025-05-19T03:07:13.256572Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011455297470092773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.staging_meal_ingredients_lookup", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: staging_meal_ingredients_lookup\n-- Description: Staging Table, lookup for Ingredients for each meal, used for Dim\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-12 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\nSELECT mit.meal_name, mit.meal_id, mit.ingredient_name, mi.ingredient_id\n\tFROM \"camondagster\".\"public_base\".\"base_meal_ingredient_table\" as mit \n\tleft join \"camondagster\".\"public_base\".\"base_meal_ingredients\" as mi \n\ton mit.ingredient_name = mi.ingredient_name", "relation_name": "\"camondagster\".\"public_staging\".\"staging_meal_ingredients_lookup\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.246679Z", "completed_at": "2025-05-19T03:07:13.257257Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.258444Z", "completed_at": "2025-05-19T03:07:13.258449Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013852834701538086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.dbt_utils_unique_combination_of_columns_base_meal_ingredient_table_ingredient_name__meal_id.319098ed2d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        ingredient_name, meal_id\n    from \"camondagster\".\"public_base\".\"base_meal_ingredient_table\"\n    group by ingredient_name, meal_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.261283Z", "completed_at": "2025-05-19T03:07:13.269574Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.270059Z", "completed_at": "2025-05-19T03:07:13.270064Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010972738265991211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_base_meal_ingredients_ingredient_id.0a9dcc549e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ingredient_id\nfrom \"camondagster\".\"public_base\".\"base_meal_ingredients\"\nwhere ingredient_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.265849Z", "completed_at": "2025-05-19T03:07:13.271875Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.272867Z", "completed_at": "2025-05-19T03:07:13.272872Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012201786041259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_base_meal_ingredients_ingredient_id.a78af5b0c2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    ingredient_id as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_base\".\"base_meal_ingredients\"\nwhere ingredient_id is not null\ngroup by ingredient_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.273602Z", "completed_at": "2025-05-19T03:07:13.283787Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.284402Z", "completed_at": "2025-05-19T03:07:13.284408Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01310586929321289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.dbt_utils_unique_combination_of_columns_base_rm_character_episode_character_dlt_id__episode_id.54e2562ff2", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        character_dlt_id, episode_id\n    from \"camondagster\".\"public_base\".\"base_rm_character_episode\"\n    group by character_dlt_id, episode_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.279920Z", "completed_at": "2025-05-19T03:07:13.286198Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.287157Z", "completed_at": "2025-05-19T03:07:13.287163Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00838160514831543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_base_openlibrary_key.4f2c5727d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect key\nfrom \"camondagster\".\"public_base\".\"base_openlibrary\"\nwhere key is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.287885Z", "completed_at": "2025-05-19T03:07:13.292396Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.293422Z", "completed_at": "2025-05-19T03:07:13.293427Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0078051090240478516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_base_openlibrary_key.c2996aab1f", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    key as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_base\".\"base_openlibrary\"\nwhere key is not null\ngroup by key\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.295195Z", "completed_at": "2025-05-19T03:07:13.305951Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.306540Z", "completed_at": "2025-05-19T03:07:13.306545Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013762950897216797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.staging_rm_characters", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Staging_rm_characters\n-- Description: Staging model for characters data\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-19 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\nwith episodes_per_character as (\n  \n(\n    SELECT\n        \n            character_dlt_id\n        ,\n        COUNT(episode_id) AS Num_Episodes\n    FROM \"camondagster\".\"public_base\".\"base_rm_character_episode\"\n    GROUP BY\n        \n            character_dlt_id\n        \n)\n \n)\n\nSELECT bc.character_id, character_name, \nCASE\n    WHEN regexp_matches(character_name, '^Rick\\b', 'i') THEN 'Rick'\n    WHEN regexp_matches(character_name, '^Morty\\b', 'i') THEN 'Morty'\n    WHEN regexp_matches(character_name, '^Summer\\b', 'i') THEN 'Summer'\n    WHEN regexp_matches(character_name, '^Beth\\b', 'i') THEN 'Beth'\n    WHEN regexp_matches(character_name, '^Jerry\\b', 'i') THEN 'Jerry'\n    ELSE 'Other'\n  END AS character_group,\ncharacter_status, character_species, \ncharacter_gender, character_origin,\ncharacter_image, character_created, bc.character_dlt_id, epc.Num_Episodes\nFROM \"camondagster\".\"public_base\".\"base_rm_characters\" as bc \nleft join episodes_per_character as epc\non bc.character_dlt_id = epc.character_dlt_id\norder by bc.character_id", "relation_name": "\"camondagster\".\"public_staging\".\"staging_rm_characters\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.300012Z", "completed_at": "2025-05-19T03:07:13.308860Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.313206Z", "completed_at": "2025-05-19T03:07:13.313212Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014556407928466797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.accepted_values_base_rm_characters_character_gender__True__Genderless__Male__Female__unknown.46d64263d5", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        character_gender as value_field,\n        count(*) as n_records\n\n    from \"camondagster\".\"public_base\".\"base_rm_characters\"\n    group by character_gender\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Genderless','Male','Female','unknown'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.309354Z", "completed_at": "2025-05-19T03:07:13.319884Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.320414Z", "completed_at": "2025-05-19T03:07:13.320419Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012686014175415039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.accepted_values_base_rm_characters_character_status__True__Alive__unknown__Dead.a8b2d7ed1c", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        character_status as value_field,\n        count(*) as n_records\n\n    from \"camondagster\".\"public_base\".\"base_rm_characters\"\n    group by character_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Alive','unknown','Dead'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.315629Z", "completed_at": "2025-05-19T03:07:13.326267Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.326978Z", "completed_at": "2025-05-19T03:07:13.326983Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012430906295776367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_base_rm_characters_character_id.43c52019f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect character_id\nfrom \"camondagster\".\"public_base\".\"base_rm_characters\"\nwhere character_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.322697Z", "completed_at": "2025-05-19T03:07:13.328314Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.329298Z", "completed_at": "2025-05-19T03:07:13.329303Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007718563079833984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_base_rm_characters_character_id.6dc0db618b", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    character_id as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_base\".\"base_rm_characters\"\nwhere character_id is not null\ngroup by character_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.330991Z", "completed_at": "2025-05-19T03:07:13.339745Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.340284Z", "completed_at": "2025-05-19T03:07:13.340290Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011609077453613281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.dbt_utils_unique_combination_of_columns_base_rm_episode_character_episode_dlt_id__character_id.a7d124aeab", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        episode_dlt_id, character_id\n    from \"camondagster\".\"public_base\".\"base_rm_episode_character\"\n    group by episode_dlt_id, character_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.336224Z", "completed_at": "2025-05-19T03:07:13.340971Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.342085Z", "completed_at": "2025-05-19T03:07:13.342091Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00710296630859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.staging_rm_episodes", "compiled": true, "compiled_code": "with characters_in_episodes as (\n    \n(\n    SELECT\n        \n            episode_dlt_id\n        ,\n        COUNT(character_id) AS Num_Characters\n    FROM \"camondagster\".\"public_base\".\"base_rm_episode_character\"\n    GROUP BY\n        \n            episode_dlt_id\n        \n)\n \n)\n\nSELECT episode_id, episode_name, \nCASE\n        WHEN episode_name ILIKE '%ricklantis%' OR episode_name ILIKE '%rickmurai%' OR episode_name ILIKE '%pickle rick%' OR episode_name ILIKE '%rickternal%' THEN 'Rick-Focused'\n        WHEN episode_name ILIKE '%morty%' OR episode_name ILIKE '%mort%' THEN 'Morty-Focused'\n        WHEN episode_name ILIKE '%interdimensional cable%' OR episode_name ILIKE '%rixty minutes%' THEN 'Interdimensional Cable'\n        WHEN episode_name ILIKE '%rick%' AND episode_name ILIKE '%mort%' THEN 'Rick & Morty Duo'\n        WHEN episode_name ILIKE '%park%' OR episode_name ILIKE '%shaym%' OR episode_name ILIKE '%recall%' OR episode_name ILIKE '%galactica%' OR episode_name ILIKE '%jack%' OR episode_name ILIKE '%tomorty%' OR episode_name ILIKE '%spotless%' THEN 'Pop Culture Reference'\n        ELSE 'Other'\n    END AS episode_group,\nepisode_air_date , episode,\nCAST(SUBSTR(episode, 2, 2) AS INTEGER) AS season_num,\n    CAST(SUBSTR(episode, 5, 2) AS INTEGER) AS episode_num\n,be.episode_dlt_id\n,cie.Num_Characters\nFROM \"camondagster\".\"public_base\".\"base_rm_episodes\" as be \nleft join characters_in_episodes as cie \non be.episode_dlt_id = cie.episode_dlt_id", "relation_name": "\"camondagster\".\"public_staging\".\"staging_rm_episodes\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.349507Z", "completed_at": "2025-05-19T03:07:13.355590Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.356064Z", "completed_at": "2025-05-19T03:07:13.356069Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011703014373779297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_base_rm_episodes_episode_id.e1123cf950", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    episode_id as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_base\".\"base_rm_episodes\"\nwhere episode_id is not null\ngroup by episode_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.344972Z", "completed_at": "2025-05-19T03:07:13.356790Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.357852Z", "completed_at": "2025-05-19T03:07:13.357858Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015043020248413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_base_rm_episodes_episode_id.750f703191", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect episode_id\nfrom \"camondagster\".\"public_base\".\"base_rm_episodes\"\nwhere episode_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.365458Z", "completed_at": "2025-05-19T03:07:13.369185Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.369682Z", "completed_at": "2025-05-19T03:07:13.369688Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009648799896240234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.staging_rm_locations", "compiled": true, "compiled_code": "with resident_per_location as (\n\t\n(\n    SELECT\n        \n            location_dlt_id\n        ,\n        COUNT(character_id) AS Num_Characters\n    FROM \"camondagster\".\"public_base\".\"base_rm_location_residents\"\n    GROUP BY\n        \n            location_dlt_id\n        \n)\n \n)\n\nSELECT bl.location_id, location_name, location_type\n,CASE\n    WHEN LOWER(location_type) IN ('planet', 'asteroid', 'quasar', 'mount', 'elemental rings', 'dwarf planet (celestial dwarf)') THEN 'Celestial Body'\n    WHEN LOWER(location_type) IN ('teenyverse', 'miniverse', 'microverse', 'diegesis', 'non-diegetic alternative reality', 'box', 'machine') THEN 'Artificial World'\n    WHEN LOWER(location_type) IN ('game', 'dream', 'memory', 'tv', 'consciousness', 'nightmare', 'fantasy town') THEN 'Virtual/Simulated'\n    WHEN LOWER(location_type) IN ('space station', 'resort', 'spa', 'base', 'police department', 'customs', 'daycare', 'spacecraft', 'arcade') THEN 'Location Type'\n    WHEN LOWER(location_type) IN ('hell', 'reality', 'liquid', 'death star', 'artificially generated world') THEN 'Abstract Realm'\n    WHEN LOWER(location_type) IN ('country', 'cluster', 'menagerie', 'convention') THEN 'Social Structure'\n    WHEN LOWER(location_type) IN ('quadrant') THEN 'Quadrant/Zone'\n    ELSE 'Unknown' END AS location_categories\n, location_dimension\n,CASE\n        WHEN location_dimension ILIKE '%unknown%' THEN 'Unclassified'\n        WHEN LOWER(location_dimension) LIKE 'dimension c%' THEN 'Standard Format'\n        WHEN location_dimension ILIKE '%Fascist%' THEN 'Fascist Variant'\n        WHEN location_dimension ILIKE '%Magic%' OR\n             location_dimension ILIKE '%Fantasy%' OR\n             location_dimension ILIKE '%Post-Apocalyptic%' OR\n             location_dimension ILIKE '%Merged%' OR\n             location_dimension ILIKE '%Evil Rick%' OR\n             location_dimension ILIKE '%Testicle%' OR\n             location_dimension ILIKE '%Eric Stoltz%' OR\n             location_dimension ILIKE '%Wasp%' OR\n             location_dimension ILIKE '%Phone%' OR\n             location_dimension ILIKE '%Spider%' OR\n             location_dimension ILIKE '%Pizza%' OR\n             location_dimension ILIKE '%Chair%' OR\n             location_dimension ILIKE '%Tusk%' OR\n             location_dimension ILIKE '%Cromulon%' THEN 'Thematic'\n        WHEN location_dimension ILIKE '%Replacement%' OR location_dimension ILIKE '%Cronenberg%' THEN 'Canonical Named'\n        ELSE 'Other' end as dimension_group\n, location_created\n,bl.location_dlt_id\n,rpl.Num_Characters\nFROM \"camondagster\".\"public_base\".\"base_rm_locations\" as bl \nleft join resident_per_location as rpl\non bl.location_dlt_id = rpl.location_dlt_id", "relation_name": "\"camondagster\".\"public_staging\".\"staging_rm_locations\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.360634Z", "completed_at": "2025-05-19T03:07:13.370412Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.371516Z", "completed_at": "2025-05-19T03:07:13.371522Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013009786605834961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.dbt_utils_unique_combination_of_columns_base_rm_location_residents_location_dlt_id__character_id.e9a4362b6b", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        location_dlt_id, character_id\n    from \"camondagster\".\"public_base\".\"base_rm_location_residents\"\n    group by location_dlt_id, character_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.374453Z", "completed_at": "2025-05-19T03:07:13.383527Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.384371Z", "completed_at": "2025-05-19T03:07:13.384377Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012222528457641602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.dbt_expectations_expect_column_values_to_be_between_base_weather_latitude__90___90__False.59cb5ebebd", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and latitude >= -90 and latitude <= 90\n)\n as expression\n\n\n    from \"camondagster\".\"public_base\".\"base_weather\"\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.379367Z", "completed_at": "2025-05-19T03:07:13.385238Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.386338Z", "completed_at": "2025-05-19T03:07:13.386344Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012552261352539062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.dbt_expectations_expect_column_values_to_be_between_base_weather_longitude__180___180__False.f01e8833c7", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and longitude >= -180 and longitude <= 180\n)\n as expression\n\n\n    from \"camondagster\".\"public_base\".\"base_weather\"\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.389238Z", "completed_at": "2025-05-19T03:07:13.397840Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.398395Z", "completed_at": "2025-05-19T03:07:13.398400Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011365652084350586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.dbt_utils_unique_combination_of_columns_base_weather_weather_date__city.cca068c581", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        weather_date, city\n    from \"camondagster\".\"public_base\".\"base_weather\"\n    group by weather_date, city\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.393982Z", "completed_at": "2025-05-19T03:07:13.405048Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.405651Z", "completed_at": "2025-05-19T03:07:13.405657Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01704883575439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_base_rm_locations_location_id.a55eda5e7f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect location_id\nfrom \"camondagster\".\"public_base\".\"base_rm_locations\"\nwhere location_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.400712Z", "completed_at": "2025-05-19T03:07:13.407538Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.408552Z", "completed_at": "2025-05-19T03:07:13.408557Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008897066116333008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.relationships_base_weather_city__city__ref_base_geo_.1a216bf670", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select city as from_field\n    from \"camondagster\".\"public_base\".\"base_weather\"\n    where city is not null\n),\n\nparent as (\n    select city as to_field\n    from \"camondagster\".\"public_base\".\"base_geo\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.409319Z", "completed_at": "2025-05-19T03:07:13.416650Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.417617Z", "completed_at": "2025-05-19T03:07:13.417622Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01067972183227539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_base_rm_locations_location_id.98f222cc59", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    location_id as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_base\".\"base_rm_locations\"\nwhere location_id is not null\ngroup by location_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.418349Z", "completed_at": "2025-05-19T03:07:13.427397Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.427915Z", "completed_at": "2025-05-19T03:07:13.427920Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011980533599853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_dim_date_date_col.0abb09b4ea", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_col\nfrom \"camondagster\".\"public_common\".\"dim_date\"\nwhere date_col is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.423816Z", "completed_at": "2025-05-19T03:07:13.429664Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.430656Z", "completed_at": "2025-05-19T03:07:13.430661Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007915973663330078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_dim_date_date_col.217a54f7bd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    date_col as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_common\".\"dim_date\"\nwhere date_col is not null\ngroup by date_col\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.431419Z", "completed_at": "2025-05-19T03:07:13.435945Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.440127Z", "completed_at": "2025-05-19T03:07:13.440136Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011141777038574219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.dim_beverage_glass_type", "compiled": true, "compiled_code": "SELECT glass_type, glass_type_sk\n    from \"camondagster\".\"public_snapshots\".\"glass_type_snapshot\"\n\tgroup by glass_type, glass_type_sk", "relation_name": "\"camondagster\".\"public_common\".\"dim_beverage_glass_type\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.436448Z", "completed_at": "2025-05-19T03:07:13.446720Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.447251Z", "completed_at": "2025-05-19T03:07:13.447256Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012373208999633789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_glass_type_snapshot_beverage_id.37ac86439c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect beverage_id\nfrom \"camondagster\".\"public_snapshots\".\"glass_type_snapshot\"\nwhere beverage_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.442859Z", "completed_at": "2025-05-19T03:07:13.452332Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.452998Z", "completed_at": "2025-05-19T03:07:13.453003Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011247634887695312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_glass_type_snapshot_beverage_id.5cc2dd93e1", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    beverage_id as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_snapshots\".\"glass_type_snapshot\"\nwhere beverage_id is not null\ngroup by beverage_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.449568Z", "completed_at": "2025-05-19T03:07:13.455360Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.460635Z", "completed_at": "2025-05-19T03:07:13.460641Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012200355529785156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.dim_alcoholic_type", "compiled": true, "compiled_code": "SELECT alcoholic_type, \nalcoholic_type_sk\n\tFrom \"camondagster\".\"public_staging\".\"staging_beverage_lookup\"\ngroup by alcoholic_type, alcoholic_type_sk", "relation_name": "\"camondagster\".\"public_common\".\"dim_alcoholic_type\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.455862Z", "completed_at": "2025-05-19T03:07:13.462791Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.463806Z", "completed_at": "2025-05-19T03:07:13.463812Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009544134140014648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.dim_beverage_type", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Dim_beverage_type\n-- Description: Dimension Table, beverage type information\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-17 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\nselect beverage_type, alcoholic_type, beverage_category_sk, Alcoholic_Type_SK\n\tFrom \"camondagster\".\"public_staging\".\"staging_beverage_lookup\"\n\tgroup by beverage_type, alcoholic_type, beverage_category_sk, Alcoholic_Type_SK", "relation_name": "\"camondagster\".\"public_common\".\"dim_beverage_type\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.464916Z", "completed_at": "2025-05-19T03:07:13.472842Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.473553Z", "completed_at": "2025-05-19T03:07:13.473560Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011434078216552734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.staging_beverage_consumption", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Staging_Beverage_Consumption\n-- Description: Fact Table data, consumption events generated from API \n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-12 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\nselect bc.id_drink as beverage_id, str_drink as beverage_name, \nbcl.beverage_category_sk as beverage_category_sk,\nstr_glass as glass_type,\nbcl.beverage_type_sk as beverage_type_sk,\nbcl.beverage_type as beverage_type,\nbcl.alcoholic_type_sk as alcoholic_type_sk,\nbcl.alcoholic_type as alcoholic_type,\nstr_category, \nstr_alcoholic, \nbgl.glass_type_sk,\nstr_instructions as beverage_instructions, str_drink_thumb as beverage_url, date_melbourne,\nstr_ingredient1, str_ingredient2, \nstr_ingredient3, str_ingredient4, str_ingredient5, \nstr_ingredient6, str_ingredient7, str_ingredient8\n\t-- from public_base.base_beverage_consumption as bc\n    from \"camondagster\".\"public_base\".\"base_beverage_consumption\" as bc\n\t-- left join public_base.base_beverage_glass_lookup as bgl\n    left join \"camondagster\".\"public_snapshots\".\"glass_type_snapshot\"  as bgl\n\ton bc.id_drink = bgl.beverage_id and dbt_valid_to is null\n\tleft join \"camondagster\".\"public_staging\".\"staging_beverage_lookup\"  as bcl\n\ton bc.id_drink = bcl.beverage_id", "relation_name": "\"camondagster\".\"public_staging\".\"staging_beverage_consumption\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.470041Z", "completed_at": "2025-05-19T03:07:13.479992Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.480540Z", "completed_at": "2025-05-19T03:07:13.480547Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011593341827392578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.dim_city", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Dim City\n-- Description: Dimension Table, city information\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-17 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\nselect city, latitude, longitude, region, City_SK,\nCountry_SK\nfrom \"camondagster\".\"public_staging\".\"staging_geo\"\ngroup by city, latitude, longitude, region, City_SK, Country_SK", "relation_name": "\"camondagster\".\"public_common\".\"dim_city\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.476778Z", "completed_at": "2025-05-19T03:07:13.486346Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.486923Z", "completed_at": "2025-05-19T03:07:13.486930Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012104272842407227, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.dim_country", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Dim Country\n-- Description: Dimension Table, country information\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-17 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\nselect country_code, country, Country_SK\nfrom \"camondagster\".\"public_staging\".\"staging_geo\"\ngroup by country_code, country, Country_SK", "relation_name": "\"camondagster\".\"public_common\".\"dim_country\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.483087Z", "completed_at": "2025-05-19T03:07:13.489494Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.493179Z", "completed_at": "2025-05-19T03:07:13.493187Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011332511901855469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.dim_meal_category", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: dim_meal_category\n-- Description: Dimension Table, containing meal category information\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-16 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\nSELECT category_name, country_name, meal_country_category_sk\n\tFrom \"camondagster\".\"public_staging\".\"staging_meal_category_lookup\"\ngroup by category_name, country_name, meal_country_category_sk", "relation_name": "\"camondagster\".\"public_common\".\"dim_meal_category\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.489978Z", "completed_at": "2025-05-19T03:07:13.499421Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.499929Z", "completed_at": "2025-05-19T03:07:13.499936Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011764049530029297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.dim_meal_country", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Dim_meal_country\n-- Description: Dimension Table, meal country information\n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-17 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\nSELECT country_name, meal_country_sk\n\tFrom \"camondagster\".\"public_staging\".\"staging_meal_category_lookup\"\ngroup by country_name, meal_country_sk", "relation_name": "\"camondagster\".\"public_common\".\"dim_meal_country\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.496060Z", "completed_at": "2025-05-19T03:07:13.502352Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.506350Z", "completed_at": "2025-05-19T03:07:13.506357Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01168370246887207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.staging_meal_consumption", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Staging_Meal_Consumption\n-- Description: Fact Table data, consumption events generated from API \n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-12 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\nSELECT bc.meal_id as meal_id, bc.meal_name as meal_name,\nbc.category_name as category_name, bc.country_name as country_name,\n-- Dim SK\nbcl.meal_country_category_sk as meal_country_category_sk,\n\nbc.instructions as instructions, bc.meal_image_url as meal_image_url, bc.meal_youtube_url as meal_youtube_url, \nstr_ingredient1, str_ingredient2, str_ingredient3, str_ingredient4, str_ingredient5, str_ingredient6, \nstr_ingredient7, str_ingredient8, str_ingredient9, str_ingredient10, str_ingredient11, str_ingredient12, \nstr_ingredient13, str_ingredient14, str_ingredient15, str_ingredient16, str_ingredient17, str_ingredient18, \nstr_ingredient19, str_ingredient20, bc.meal_url as meal_url\n\t-- FROM public_base.base_beverage_consumption as bc\n    FROM \"camondagster\".\"public_base\".\"base_meal_consumption\" as bc\n\tleft join \"camondagster\".\"public_staging\".\"staging_meal_category_lookup\"  as bcl\n\ton bc.meal_id = bcl.meal_id", "relation_name": "\"camondagster\".\"public_staging\".\"staging_meal_consumption\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.502816Z", "completed_at": "2025-05-19T03:07:13.508391Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.509401Z", "completed_at": "2025-05-19T03:07:13.509408Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008268356323242188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.dim_meal_ingredient_hierarchy", "compiled": true, "compiled_code": "SELECT sil.meal_id, sil.ingredient_name as ingredient1\n,sil2.ingredient_name as ingredient2\n,sil3.ingredient_name as ingredient3\n,sil4.ingredient_name as ingredient4\nFROM \"camondagster\".\"public_staging\".\"staging_meal_ingredients_lookup\" as sil\n-- Second\nleft join \"camondagster\".\"public_staging\".\"staging_meal_ingredients_lookup\" as sil2\non sil.meal_id = sil2.meal_id and sil.ingredient_id != sil2.ingredient_id\n-- third\nleft join \"camondagster\".\"public_staging\".\"staging_meal_ingredients_lookup\" as sil3\non sil.meal_id = sil3.meal_id and sil3.ingredient_id not in (sil2.ingredient_id, sil.ingredient_id)\n-- Fourth\nleft join \"camondagster\".\"public_staging\".\"staging_meal_ingredients_lookup\" as sil4\non sil.meal_id = sil4.meal_id and sil4.ingredient_id not in (sil3.ingredient_id, sil2.ingredient_id, sil.ingredient_id)", "relation_name": "\"camondagster\".\"public_common\".\"dim_meal_ingredient_hierarchy\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.510123Z", "completed_at": "2025-05-19T03:07:13.519685Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.520205Z", "completed_at": "2025-05-19T03:07:13.520211Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012439489364624023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.dim_meal_ingredient_jointable", "compiled": true, "compiled_code": "SELECT distinct meal_id\n    from \"camondagster\".\"public_staging\".\"staging_meal_ingredients_lookup\" \n    where meal_id is not null", "relation_name": "\"camondagster\".\"public_common\".\"dim_meal_ingredient_jointable\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.516878Z", "completed_at": "2025-05-19T03:07:13.526268Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.526802Z", "completed_at": "2025-05-19T03:07:13.526809Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011006593704223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.fact_beverage_consumption", "compiled": true, "compiled_code": "SELECT beverage_id, beverage_name, glass_type_sk, Beverage_Category_SK,Beverage_Type_SK, \nAlcoholic_Type_SK, Beverage_Type, Alcoholic_type,\nbeverage_instructions, beverage_url, Glass_Type, date_melbourne,\nstr_ingredient1, str_ingredient2, \nstr_ingredient3, str_ingredient4, str_ingredient5, \nstr_ingredient6, str_ingredient7, str_ingredient8\n    From \"camondagster\".\"public_staging\".\"staging_beverage_consumption\"", "relation_name": "\"camondagster\".\"public_common\".\"fact_beverage_consumption\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.522608Z", "completed_at": "2025-05-19T03:07:13.530074Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.534188Z", "completed_at": "2025-05-19T03:07:13.534195Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01274251937866211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_dim_city_city_sk.ab81b8c4f2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect city_sk\nfrom \"camondagster\".\"public_common\".\"dim_city\"\nwhere city_sk is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.530594Z", "completed_at": "2025-05-19T03:07:13.536220Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.537183Z", "completed_at": "2025-05-19T03:07:13.537190Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008765459060668945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_dim_city_city_sk.c481aa01d2", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    city_sk as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_common\".\"dim_city\"\nwhere city_sk is not null\ngroup by city_sk\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.537899Z", "completed_at": "2025-05-19T03:07:13.547423Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.547925Z", "completed_at": "2025-05-19T03:07:13.547933Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012382268905639648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_dim_country_country_sk.86f12ec03d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect country_sk\nfrom \"camondagster\".\"public_common\".\"dim_country\"\nwhere country_sk is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.543572Z", "completed_at": "2025-05-19T03:07:13.549225Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.550219Z", "completed_at": "2025-05-19T03:07:13.550227Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007768392562866211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_dim_country_country_sk.76e889bc85", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    country_sk as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_common\".\"dim_country\"\nwhere country_sk is not null\ngroup by country_sk\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.552035Z", "completed_at": "2025-05-19T03:07:13.563099Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.563638Z", "completed_at": "2025-05-19T03:07:13.563646Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014037847518920898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.not_null_dim_meal_category_meal_country_category_sk.768ab23865", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect meal_country_category_sk\nfrom \"camondagster\".\"public_common\".\"dim_meal_category\"\nwhere meal_country_category_sk is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.556975Z", "completed_at": "2025-05-19T03:07:13.564898Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.565972Z", "completed_at": "2025-05-19T03:07:13.565979Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010241270065307617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.camondagster.unique_dim_meal_category_meal_country_category_sk.a3a161cd32", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    meal_country_category_sk as unique_field,\n    count(*) as n_records\n\nfrom \"camondagster\".\"public_common\".\"dim_meal_category\"\nwhere meal_country_category_sk is not null\ngroup by meal_country_category_sk\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-19T03:07:13.567314Z", "completed_at": "2025-05-19T03:07:13.570057Z"}, {"name": "execute", "started_at": "2025-05-19T03:07:13.570526Z", "completed_at": "2025-05-19T03:07:13.570531Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005195140838623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.camondagster.fact_meal_consumption", "compiled": true, "compiled_code": "-- ------------------------------------------------------------------------------\n-- Model: Fact_Meal_Consumption\n-- Description: Fact Table, consumption events generated from API \n-- ------------------------------------------------------------------------------\n-- Change Log:\n-- Date       | Author   | Description\n-- -----------|----------|-------------------------------------------------------\n-- 2025-05-12 | Cam      | Initial creation\n-- YYYY-MM-DD | NAME     | [Add future changes here]\n-- ------------------------------------------------------------------------------\n\nSELECT meal_id, meal_name,\ncategory_name, country_name,\nmeal_country_category_sk,\ninstructions, meal_image_url, meal_youtube_url, \nstr_ingredient1, str_ingredient2, str_ingredient3, str_ingredient4, str_ingredient5, str_ingredient6, \nstr_ingredient7, str_ingredient8, str_ingredient9, str_ingredient10, str_ingredient11, str_ingredient12, \nstr_ingredient13, str_ingredient14, str_ingredient15, str_ingredient16, str_ingredient17, str_ingredient18, \nstr_ingredient19, str_ingredient20, meal_url\nFROM \"camondagster\".\"public_staging\".\"staging_meal_consumption\"", "relation_name": "\"camondagster\".\"public_common\".\"fact_meal_consumption\"", "batch_results": null}], "elapsed_time": 2.7905707359313965, "args": {"log_file_max_bytes": 10485760, "show_resource_report": false, "quiet": false, "warn_error_options": {"include": [], "exclude": []}, "send_anonymous_usage_stats": true, "log_format": "default", "which": "generate", "use_colors": true, "skip_nodes_if_on_run_start_fails": false, "source_freshness_run_project_hooks": false, "empty_catalog": false, "require_yaml_configuration_for_mf_time_spines": false, "static": false, "populate_cache": true, "partial_parse": true, "vars": {}, "exclude": [], "print": true, "write_json": true, "macro_debugging": false, "state_modified_compare_vars": false, "log_level": "info", "log_path": "/home/runner/work/CamOnDagsterDbt/CamOnDagsterDbt/dbt/logs", "require_resource_names_without_spaces": false, "require_nested_cumulative_type_params": false, "require_explicit_package_overrides_for_builtin_materializations": true, "version_check": true, "log_level_file": "debug", "invocation_command": "dbt docs generate", "state_modified_compare_more_unrendered_values": false, "project_dir": "/home/runner/work/CamOnDagsterDbt/CamOnDagsterDbt/dbt", "use_colors_file": true, "favor_state": false, "printer_width": 80, "static_parser": true, "select": [], "compile": true, "log_format_file": "debug", "defer": false, "profiles_dir": "/home/runner/.dbt", "strict_mode": false, "introspect": true, "require_batched_execution_for_custom_microbatch_strategy": false, "indirect_selection": "eager", "partial_parse_file_diff": true, "cache_selected_only": false}}